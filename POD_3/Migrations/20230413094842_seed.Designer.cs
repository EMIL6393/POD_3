// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POD_3.Context;

#nullable disable

namespace POD_3.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20230413094842_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("POD_3.DAL.Entity.SubscriptionManagementMod.SubscriptionCancellation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CancellationReason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriptionId")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId")
                        .IsUnique();

                    b.ToTable("SubscriptionCancellations");
                });

            modelBuilder.Entity("POD_3.DAL.Entity.SubscriptionManagementMod.SubscriptionPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PricePerMonth")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("PlanId");

                    b.ToTable("SubscriptionPlans");

                    b.HasData(
                        new
                        {
                            PlanId = 1,
                            Name = "basic",
                            PricePerMonth = 10
                        },
                        new
                        {
                            PlanId = 2,
                            Name = "pro",
                            PricePerMonth = 50
                        });
                });

            modelBuilder.Entity("POD_3.DAL.Entity.SubscriptionManagementMod.UserSubscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"), 1L, 1);

                    b.Property<int>("AmountPaid")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlanId")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubscriptionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionStatus")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("PlanId");

                    b.ToTable("UserSubscriptions");

                    b.HasCheckConstraint("chk_future_dates", "SubscriptionStartDate > GETDATE() AND SubscriptionEndDate > GETDATE()");

                    b.HasCheckConstraint("chk_payment_modes", "PaymentMode IN ('Card', 'NetBanking')");

                    b.HasCheckConstraint("chk_subscription_status", "SubscriptionStatus IN ('New', 'Renewed', 'Cancelled')");
                });

            modelBuilder.Entity("POD_3.DAL.Entity.SubscriptionManagementMod.SubscriptionCancellation", b =>
                {
                    b.HasOne("POD_3.DAL.Entity.SubscriptionManagementMod.UserSubscription", "UserSubscription")
                        .WithOne("SubscriptionCancellation")
                        .HasForeignKey("POD_3.DAL.Entity.SubscriptionManagementMod.SubscriptionCancellation", "SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserSubscription");
                });

            modelBuilder.Entity("POD_3.DAL.Entity.SubscriptionManagementMod.UserSubscription", b =>
                {
                    b.HasOne("POD_3.DAL.Entity.SubscriptionManagementMod.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("POD_3.DAL.Entity.SubscriptionManagementMod.SubscriptionPlan", b =>
                {
                    b.Navigation("UserSubscriptions");
                });

            modelBuilder.Entity("POD_3.DAL.Entity.SubscriptionManagementMod.UserSubscription", b =>
                {
                    b.Navigation("SubscriptionCancellation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
